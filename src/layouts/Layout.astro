---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content="Jakub Polec - Physicist, AI & Quant Infrastructure Architect, Entrepreneur, and Global Technology Strategist" />
		<title>{title}</title>
		<link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
		<script is:inline>
			// Set initial theme
			document.documentElement.classList.add(
				localStorage.getItem('theme') || 
				(window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')
			);
		</script>
	</head>
	<body>
		<div class="theme-switch-wrapper">
			<button class="theme-switch" id="theme-toggle" aria-label="Toggle theme">
				<svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#0a192f" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<circle cx="12" cy="12" r="5"></circle>
					<line x1="12" y1="1" x2="12" y2="3"></line>
					<line x1="12" y1="21" x2="12" y2="23"></line>
					<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
					<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
					<line x1="1" y1="12" x2="3" y2="12"></line>
					<line x1="21" y1="12" x2="23" y2="12"></line>
					<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
					<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
				</svg>
				<svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
				</svg>
			</button>
		</div>
		<nav class="main-nav">
			<div class="nav-container">
				<a href="/" class="nav-link">Home</a>
				<span class="separator">|</span>
				<a href="/#corporate" class="nav-link">Startups</a>
				<span class="separator">|</span>
				<a href="/articles" class="nav-link">Articles</a>
				<span class="separator">|</span>
				<a href="/threads" class="nav-link">Threads</a>
				<span class="separator">|</span>
				<a href="https://calendar.notion.so/meet/jakubpolec/1-on-1" target="_blank" class="nav-link">Set Up Meeting</a>
			</div>
		</nav>
		<slot />
		<script is:inline>
			// Theme toggle
			document.getElementById('theme-toggle').onclick = function() {
				const isDark = document.documentElement.classList.toggle('dark');
				localStorage.setItem('theme', isDark ? 'dark' : 'light');
			};

			// Smooth scrolling
			document.querySelectorAll('a[href^="#"]').forEach(anchor => {
				anchor.addEventListener('click', function(e) {
					e.preventDefault();
					const href = this.getAttribute('href');
					if (!href) return;
					
					const targetElement = document.querySelector(href);
					if (targetElement) {
						const offset = 50;
						const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - offset;
						window.scrollTo({
							top: targetPosition,
							behavior: 'smooth'
						});
					}
				});
			});
		</script>
	</body>
</html>

<style is:global>
	:root {
		--primary-bg: #ffffff;
		--secondary-bg: #ffffff;
		--text-color: #0a192f;
		--text-secondary: #1a2b3c;
		--accent-color: #d35400;
		--border-color: transparent;
		--transition: all 0.3s ease;
	}

	:root.dark {
		--primary-bg: #0a1625;
		--secondary-bg: #0a1625;
		--text-color: #ffffff;
		--text-secondary: #a0a0a0;
		--accent-color: #ff6b6b;
		--border-color: transparent;
	}

	:root.dark img[src^="/tech/"] {
		filter: brightness(0) invert(1);
	}

	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
		background-color: var(--primary-bg);
		color: var(--text-color);
		font-family: 'Space Grotesk', sans-serif;
		transition: var(--transition);
	}

	.theme-switch-wrapper {
		position: fixed;
		top: 15px;
		right: 20px;
		z-index: 100;
	}

	.theme-switch {
		background: none;
		border: none;
		padding: 8px;
		cursor: pointer;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: var(--transition);
	}

	.theme-switch:hover {
		background-color: var(--border-color);
	}

	.moon-icon {
		display: none;
	}

	:root.dark .sun-icon {
		display: none;
	}

	:root.dark .moon-icon {
		display: block;
	}

	h1, h2, h3, h4, h5, h6, p, span, a, li {
		color: var(--text-color);
		transition: var(--transition);
	}

	.main-nav {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		background: var(--primary-bg);
		border-bottom: 1px solid var(--border-color);
		z-index: 90;
	}

	.nav-container {
		max-width: 1020px;
		margin: 0 auto;
		padding: 1rem 2rem;
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 1rem;
	}

	.nav-link {
		color: var(--text-color);
		text-decoration: none;
		font-weight: 500;
		font-size: 1rem;
		transition: var(--transition);
		position: relative;
		padding: 0.5rem 0;
	}

	.nav-link::after {
		content: '';
		position: absolute;
		width: 0;
		height: 2px;
		bottom: 0;
		left: 50%;
		background-color: var(--accent-color);
		transition: all 0.3s ease;
		transform: translateX(-50%);
	}

	.nav-link:hover::after {
		width: 100%;
	}

	.separator {
		color: var(--text-secondary);
	}

	@media (max-width: 768px) {
		.nav-container {
			padding: 1rem;
			gap: 0.5rem;
		}

		.nav-link {
			font-size: 0.9rem;
		}

		.nav-link:not([href="/"]):not([href="/articles"]):not([href="/threads"]) {
			display: none;
		}

		.separator:not(:has(+ .nav-link[href="/"])):not(:has(+ .nav-link[href="/articles"])):not(:has(+ .nav-link[href="/threads"])) {
			display: none;
		}
	}
</style>
